packageとsystemの使い方


1. mybase.asdにシステムの定義を書く
　　in-packageはいらない。システムの定義では、システム内のpackageを使わないから
　　systemの定義方法はマニュアル参照
　　　確認したのは、componentsでfileを指定することくらい。
　　　　fileには拡張子(.lisp)をつけない

2. packageの作り方
　　構成案
　　　package定義はまとめる
　　　参照するソースでは、loadしてin-packageする
　　　　? 複数ソースの場合、うまくいかないこともあるかも
　　
3. sbclを起動し実行する
 * (asdf:load-system :mybase)
または
 * (require :mybase)
でよい

おもしろいのは、"なんとか"を全部:なんとかにしているようなところ
シンボルを文字列に変換して使っているらしい。'と同じような感じか。
シンボルのほうがメモリ効率はよいので、これに従おうかな。


packageの中で、複数のソースに別れたシンボルの参照も特に問題なし




**** 以下、作業中のもの。

1. mybase.asdを~/.common-lispにlinkした。copyでもよい
2. system名とpackage名を同じにしたが問題ない。
3. asdファイルでpackageをloadする必要はない。呼んでいないから。
4. 

+ sbcl
* (asdf:load-system :mybase)
で読み込む。
デフォルトで、~/.common-lisp/mybase.asdを読み込む。

+ asdfの書き方
(components (:file なんとか)...)
で、"なんとか.lisp"を読み込む。
ディレクトリの指定とかもできるらしい。

package定義もcomponentsで取り込むことにした。okd
この場合、ここのlispソースの中で(in-package なになに)が必要

+ asdfについて
(require :asdf)
が必要だと書いてあるものもある。なくても
(asdf:load-system :mybase)
はできた。

+ 簡単な例 psample.lispについて定義したmybase.asdは動いた。

ファイル構成はどうなるのか?
  packageはsystemで読み込むファイルの間の関係なので、systemとは独立だ
  

